{"ast":null,"code":"var _jsxFileName = \"/Users/bauras/Documents/personal/interview test/vaion-test/src/App.js\";\n//App.js\nimport React, { Component } from 'react';\nimport GenerateGrid from './GenerateGrid.js';\nimport './App.css';\nlet array; //= new Array();\n\nconst grid = [[0, 0, 0, 0, 1], [1, 1, 0, 1, 0], [1, 1, 1, 1, 1], [0, 0, 0, 0, 0], [1, 1, 1, 0, 0]];\nlet randomGrid = [[]];\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0,\n      random: 0\n    };\n\n    this.setGridLength = childData => {\n      this.setState({\n        gridLength: childData\n      });\n    };\n  }\n\n  handleClick() {\n    const min = 0;\n    const max = 1;\n    const rand = min + Math.random() * (max - min);\n    this.setState({\n      random: this.state.random + parseInt(rand)\n    });\n    var a = new Array(10);\n    randomGrid = this.matrix(10, 10);\n    console.log(randomGrid);\n  } // generate grid\n\n\n  matrix(rows, cols) {\n    var arr = []; // Creates all lines:\n\n    for (var i = 0; i < rows; i++) {\n      // Creates an empty line\n      arr.push([]); // Adds cols to the empty line:\n\n      arr[i].push(new Array(cols));\n\n      for (var j = 0; j < cols; j++) {\n        // Initializes:\n        arr[i][j] = Math.floor(Math.random() * 2) % 2; //defaultValue;\n      }\n    }\n\n    return arr;\n  }\n\n  handleMouseOver() {\n    // alert(2)\n    console.log(\"hover\");\n  }\n\n  handleGridClick(event) {\n    this.setState({\n      count: 0\n    });\n    array = new Array();\n\n    if (event.currentTarget.id && event.currentTarget.className.indexOf(\"zero\") > -1) {\n      return;\n    }\n\n    for (var i = 0; i < grid.length; i++) {\n      var cube = grid[i];\n\n      for (var j = 0; j < cube.length; j++) {\n        document.getElementById(i + \"-\" + j).innerHTML = \"\";\n      }\n    }\n\n    var rowIndex = event.currentTarget.id.split('-')[0];\n    var colIndex = event.currentTarget.id.split('-')[1]; //this.setState({ count: this.state.count + 1 });\n\n    if (grid[rowIndex][colIndex] == 1) {\n      array.push(rowIndex + \":\" + colIndex);\n    }\n\n    if (array.length > 0) {\n      for (var i = 0; i < array.length; i++) {\n        var splitArray = array[i].split(\":\");\n        this.checkAdjacent(parseInt(splitArray[0]), parseInt(splitArray[1]));\n      }\n    }\n\n    this.setState({\n      count: array.length\n    });\n    document.getElementById(event.currentTarget.id).innerHTML = array.length;\n  }\n\n  checkAdjacent(rowIndex, colIndex) {\n    //Right\n    var row = rowIndex;\n    var col = colIndex + 1;\n    var length = grid[0].length;\n\n    if (row >= 0 && row < length && col >= 0 && col < length && grid[row][col] == 1) {\n      var value = row + \":\" + col;\n\n      if (!array.includes(value)) {\n        array.push(value);\n      }\n    } //Left\n\n\n    row = rowIndex;\n    col = colIndex - 1;\n\n    if (row >= 0 && row < length && col >= 0 && col < length && grid[row][col] == 1) {\n      var value = row + \":\" + col;\n\n      if (!array.includes(value)) {\n        array.push(value);\n      }\n    } //bottom\n\n\n    row = rowIndex + 1;\n    col = colIndex;\n\n    if (row >= 0 && row < length && col >= 0 && col < length && grid[row][col] == 1) {\n      var value = row + \":\" + col;\n\n      if (!array.includes(value)) {\n        array.push(value);\n      }\n    } //up\n\n\n    row = rowIndex - 1;\n    col = colIndex;\n\n    if (row >= 0 && row < length && col >= 0 && col < length && grid[row][col] == 1) {\n      var value = row + \":\" + col;\n\n      if (!array.includes(value)) {\n        array.push(value);\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Grid View\"), React.createElement(\"div\", {\n      className: \"row custom-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(GenerateGrid, {\n      parentCallback: this.setGridLength,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: //  this.handleClick.bind(this)\n      e => {\n        e.preventDefault();\n        this.handleClick(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Click\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"The number is: \", this.state.random)), grid.map((row, i) => React.createElement(\"div\", {\n      className: \"row custom-row\",\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, row.map((cell, j) => React.createElement(\"div\", {\n      className: \"col-sm-1\" + (cell ? ' box' : ' zero'),\n      id: `${i}-${j}`,\n      key: j,\n      onClick: e => {\n        e.preventDefault();\n        this.handleGridClick(e);\n      },\n      onMouseOver: this.handleMouseOver(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/bauras/Documents/personal/interview test/vaion-test/src/App.js"],"names":["React","Component","GenerateGrid","array","grid","randomGrid","App","state","count","random","setGridLength","childData","setState","gridLength","handleClick","min","max","rand","Math","parseInt","a","Array","matrix","console","log","rows","cols","arr","i","push","j","floor","handleMouseOver","handleGridClick","event","currentTarget","id","className","indexOf","length","cube","document","getElementById","innerHTML","rowIndex","split","colIndex","splitArray","checkAdjacent","row","col","value","includes","render","e","preventDefault","map","cell"],"mappings":"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","sourcesContent":["//App.js\nimport React, { Component } from 'react';\nimport  GenerateGrid  from './GenerateGrid.js'\nimport './App.css';\n\nlet array ;//= new Array();\nconst grid =  [\n  [ 0, 0, 0, 0, 1 ],\n  [ 1, 1, 0, 1, 0 ],\n  [ 1, 1, 1, 1, 1 ],\n  [ 0, 0, 0, 0, 0 ],\n  [ 1, 1, 1, 0, 0 ],\n];\nlet randomGrid= [[]];\nexport default class App extends Component {\n  \n  state = { count: 0,random: 0 };\n\n  handleClick() {\n    const min = 0;\n    const max = 1;\n    const rand = min + Math.random() * (max - min);\n    this.setState({ random: this.state.random + parseInt(rand) });\n    var a = new Array(10); \n    randomGrid=this.matrix(10, 10 );\n    console.log(randomGrid);\n  \n  }\n  // generate grid\n   matrix(rows, cols){\n\n    var arr = [];\n  \n    // Creates all lines:\n    for(var i=0; i < rows; i++){\n  \n        // Creates an empty line\n        arr.push([]);\n  \n        // Adds cols to the empty line:\n        arr[i].push( new Array(cols));\n  \n        for(var j=0; j < cols; j++){\n          // Initializes:\n          arr[i][j] = Math.floor(Math.random() *2)  % 2 ;//defaultValue;\n        }\n    }\n  \n  return arr;\n  }\n  setGridLength = (childData) => {\n    this.setState({gridLength: childData});\n}\n  handleMouseOver(){\n   // alert(2)\n  console.log(\"hover\");\n  }\n  handleGridClick(event)   {\n      \n      this.setState({ count: 0 });\n    \n      array=new Array();\n        if(event.currentTarget.id && event.currentTarget.className.indexOf(\"zero\") >-1){\n          return;\n        }\n        \n          for(var i = 0; i < grid.length; i++) {\n            var cube = grid[i];\n            for(var j = 0; j < cube.length; j++) {\n               document.getElementById(i+\"-\"+j).innerHTML =\"\";\n            }\n        }\n        \n        var rowIndex =  event.currentTarget.id.split('-')[0];\n        var colIndex = event.currentTarget.id.split('-')[1];\n        //this.setState({ count: this.state.count + 1 });\n        if(grid[rowIndex][colIndex]==1){\n            array.push(rowIndex+\":\"+colIndex);    \n        }\n        if (array.length > 0) {\n            for(var i=0 ; i < array.length;i++ ) {\n                var splitArray =  array[i].split(\":\");\n                this.checkAdjacent(parseInt(splitArray[0]), parseInt(splitArray[1])) ;\n            }  \n        }  \n        this.setState({ count: array.length });\n        document.getElementById(event.currentTarget.id).innerHTML=array.length;\n    }\n       checkAdjacent(rowIndex, colIndex) {\n     \n        //Right\n        var row = rowIndex;\n        var col = colIndex+1;\n        var length=grid[0].length;\n        if((row >= 0 && row <length  && col >=  0 && col < length ) &&grid[row][col]==1){\n            var value  = row+\":\"+col;\n            if (!array.includes(value)){\n                array.push(value);    \n            }   \n        }\n        //Left\n        row = rowIndex;\n        col = colIndex-1;\n        if((row >= 0 && row <length  && col >=  0 && col < length ) && grid[row][col]==1){\n            var value  = row+\":\"+col;\n            if (!array.includes(value)){\n                array.push(value);    \n            }  \n        }\n        //bottom\n        row = rowIndex+1;\n        col = colIndex;\n        if((row >= 0 && row <length  && col >=  0 && col < length ) &&grid[row][col]==1){\n            var value  = row+\":\"+col;\n            if (!array.includes(value)){\n                array.push(value);    \n            }   \n        }\n        //up\n        row = rowIndex-1;\n        col = colIndex;\n        if((row >= 0 && row <length  && col >=  0 && col < length ) &&grid[row][col]==1){\n            var value  = row+\":\"+col;\n            if (!array.includes(value)){\n                array.push(value);    \n            }\n        }  \n    }\n    render(){\n       \n        return (\n            <div>\n                <div className=\"container\">\n                    <h1>Grid View</h1>\n                  <div className=\"row custom-row\">\n                    <GenerateGrid parentCallback = {this.setGridLength} />\n                    <button onClick={\n                    //  this.handleClick.bind(this)\n                      (e) => { e.preventDefault(); this.handleClick(e) }}\n                      >Click</button>\n                    <div>The number is: {this.state.random}</div>\n                  </div>\n                    {grid.map((row, i) => (\n                        <div className=\"row custom-row\" key={i}>\n                        {row.map((cell, j) => (\n                                <div className= {\"col-sm-1\"+(cell ? ' box' : ' zero') } id={`${i}-${j}`} key={j} \n                                    onClick={\n                                        (e) => { e.preventDefault(); this.handleGridClick(e) }}\n                                    onMouseOver =\n                                       { this.handleMouseOver() }\n                                    >   \n                                </div>             \n                        ))}\n                        </div>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}